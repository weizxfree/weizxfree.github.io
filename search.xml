<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>亚马逊逆向工作法</title>
      <link href="/2024/09/06/method_begin_end/"/>
      <url>/2024/09/06/method_begin_end/</url>
      
        <content type="html"><![CDATA[<p>职场工作十年有余，见证了老同事带领团队辛辛苦苦做了一个项目两年多，项目上线后，发现一个关键的性能问题未解决，导致客户无法集成使用，几十人的团队，两年多的付出都付诸东流。<br>这件事给我深刻的感触，如果是我或者你，身处棋局，如何尽可能保证我们做出来的事情达成目标，降低失败的可能性？</p><h2 id="什么是逆向工作法"><a href="#什么是逆向工作法" class="headerlink" title="什么是逆向工作法"></a>什么是逆向工作法</h2><blockquote><p>逆向工作法指的是把战略建立在<strong>不变</strong>的事物上。来源于亚马逊创始人贝佐斯，每当他不得不做出重大决策时，他常常会以这种方式来思考问题，比如贝佐斯认为在零售业，客户永远不变的就是想要更低的价格、更快捷的配送和更多样的选择,企业必须先搞清楚客户究竟要什么，再进行逆向操作，在对的事情上投入大量精力，只有这样企业才能在未来持续获血。</p></blockquote><p><img src="/2024/09/06/method_begin_end/begin_end.png"></p><h2 id="贝佐斯的逆向工作法"><a href="#贝佐斯的逆向工作法" class="headerlink" title="贝佐斯的逆向工作法"></a>贝佐斯的逆向工作法</h2><p>贝佐斯在选择创业时，老板多方挽留。他也不确定自己创业是否能成功，在他作出决定之前，他做了一个最小化后悔表,“假设自己80岁高龄时,对20岁时没有创业会不会后悔?”</p><p>　　答案是显而易见的，他不会因为自己没有成为更高阶的职业经理人而后悔，但是如果没有创业他一定会后悔。贝佐斯后来还将这种逻辑应用到他的个人生活中，每当他不得不做出重大决策时，他常常会以这种方式来思考问题。</p><p>　　这就是“逆向工作法”，其最关键的就是找到你一开始做这件事情的最初目的，然后根据这个目的去工作。</p><p>　　而与之形成鲜明对比的“技能导向法”则主张“我们擅长做什么”、“ 通过做什么，还能再做什么?”尽管不少时候，技能导向法是一种有用并且一定程度上奏效的商业模式。但如果沉浸于此，就会丧失创新的动力。</p><p>　　乔布斯领导的苹果公司采取的常常是“技能导向法”，苹果公司的创新往往是技术的变革以及乔布斯天马行空的想象力结合的产物。在这个方法下，企业更倾向于领导客户，改变消费观念，让顾客接受它的产品和理念。</p><p>　　而贝佐斯认为，亚马逊网站设计的总体哲学是对客户友好，应该将注意力放在顾客身上，而不是网站上。他的目标不仅是让浏览书籍变得更容易，而且要让这成为-种愉快的体验。正是在这种哲学之下，亚马逊发明了“一键下单”功能以方便顾客购买;还有“书内阅读”、“书内搜索”功能，获得了广大顾客尤其是大学生群体的喜爱和追捧。</p><p>　　正是这种为顾客着想的态度赢得了顾客的好感，亚马逊的书评区更像-一个社交平台, 人们在这里畅所欲言，也正因为通过这种方式建立起来的顾客群体和良好口碑，亚马逊的图书销量不断提升。</p><h2 id="以终为始"><a href="#以终为始" class="headerlink" title="以终为始"></a>以终为始</h2><p>逆向工作法是一个很好的思维方式。通过以目标倒推关键节点或产品策略，最终达成聚焦的目的。<br>如果要问逆向工作法最重要的一点是什么？一定是思维习惯的转变：<br><strong>“逆向工作法” 的根本出发点，是从内部或公司的视角转变为客户的视角。</strong></p><h2 id="新闻稿"><a href="#新闻稿" class="headerlink" title="新闻稿"></a>新闻稿</h2><p>逆向工作法说起来简单，实施起来却很难。因为人的思维习惯天然的从正向思考，根据已有的经验和思维习惯惯性的往前冲。亚马逊的逆向工作法中有一点我想和大家分享下：<strong>新闻稿</strong>。</p><p><strong>新闻稿</strong>让读者拥有最精彩的客户体验。<strong>常见问题</strong>提供关于客户体验的所有重要细节，同时又能全面而清晰地评估公司打造该产品或创造该服务将面临多大的成本或挑战。</p><p>新闻稿主要包括下列部分：</p><ul><li><p>标题：以阅读者（你的目标客户）容易理解的方式点出产品的名字。</p></li><li><p>副标题：描述产品以及客户使用该产品的益处。</p></li><li><p>摘要：首先写明城市、媒体渠道以及计划发布的日期，然后简述产品的情况及其好处。</p></li><li><p>问题：描述产品要解决的具体问题。一定要从客户的角度写这个部分。</p></li><li><p>解决方案：较为详细地描述你的产品，以及它如何便捷地解决客户的问题。</p></li><li><p>引用及购买：引用公司发言人的一句话，再引用假想客户的一句话，表明他们使用你的新产品所获得的各种好处。要表明购买该产品方便、快捷，给出网站链接，以便让客户获取更多信息和购买产品。</p></li></ul><p><strong>常见问题</strong>通常可分为<strong>对外常见问题</strong>（关注客户）和<strong>对内常见问题</strong>（关注公司）。<strong>对外常见问题</strong>是客户或媒体会对有关产品提出的问题，包括产品的工作方式、价格、如何及何处购买等更为细节的问题。这些问题是针对具体产品的，因而每份 PR&#x2F;FAQ 的<strong>常见问题</strong>都是独特的。<strong>对内常见问题</strong>则有更标准化的、需要予以解答的问题清单。</p><p>其实这里就是 “以终为始” 的思想，我们可以同时引入 “新闻稿” 和 “常见问题”。</p><p><img src="/2024/09/06/method_begin_end/news_example.png"></p><h2 id="Kindle"><a href="#Kindle" class="headerlink" title="Kindle"></a>Kindle</h2><p>Kindle 作为家喻户晓的电子书阅读器，这个产品的决策过程是非常值得学习的。Kindle<br>的两大创新在于无线传送和电子墨水屏。作为一个市面上从未见过的产品，这些创新点在决策时运用了逆向工作法，只有无线传送，才可以把图书馆装到自己的口袋，而不是先考虑技术如何实现；只有电子墨水屏，才能实现接近纸质书的阅读体验。从客户的需求出发，倒推出产品的核心竞争点。这是典型的应用场景。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>逆向工作法本质上是思维方式的改变，由公司内部转变成市场客户，把战略的设定基于「不变的」的基本点，倒推执行。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>埋点</title>
      <link href="/2024/09/06/data-track/"/>
      <url>/2024/09/06/data-track/</url>
      
        <content type="html"><![CDATA[<p>在大数据领域，数据源有多种途径，如服务端、数据仓库、客户端等。客户端包含 Android、iOS、网页、小程序，以及 Flutter、React Native、uni-app 等第三方框架或平台。对于客户端应用和网页而言，<strong>埋点</strong>是大数据分析系统中不可或缺的组成部分。<br><img src="/2024/09/06/data-track/sources.png"></p><h2 id="什么是埋点？"><a href="#什么是埋点？" class="headerlink" title="什么是埋点？"></a>什么是埋点？</h2><p>自 2010 年起，国内涌现出一批专注于用户行为分析和自动化运营的大数据服务商，如神策数据、GrowingIO、易观、火山引擎等。在为银行、证券、零售、企业等多个行业提供服务的过程中，我们意识到一个基础且关键的点：<strong>数据根基的重要性</strong>。</p><p>常见的问题有：<em>为什么我的数据丢失了？为什么不同平台的数据量存在巨大差异？</em> 这些问题时常发生。这些问题都印证了一点：数据质量对整个系统至关重要。</p><h3 id="数据质量的重要性"><a href="#数据质量的重要性" class="headerlink" title="数据质量的重要性"></a>数据质量的重要性</h3><p>如果数据质量出现问题，后续的分析和运营几乎无从谈起。即使生成了一份看似完美的报表和结论，其背后的真实性依然存疑。</p><h2 id="常见的埋点类型"><a href="#常见的埋点类型" class="headerlink" title="常见的埋点类型"></a>常见的埋点类型</h2><h3 id="1-代码埋点"><a href="#1-代码埋点" class="headerlink" title="1. 代码埋点"></a>1. 代码埋点</h3><p><strong>代码埋点</strong>，顾名思义，就是通过代码实现数据上报的方式。它的优点是灵活性高，可以根据业务需求采集更具针对性的数据，提升数据分析的精确度。</p><p>但它的缺点同样明显：代码埋点需要随 App 版本发布才能生效，周期较长，开发成本较高。随着时间推移，滚动增加的埋点可能导致质量和效率的下降。</p><h3 id="2-可视化埋点"><a href="#2-可视化埋点" class="headerlink" title="2. 可视化埋点"></a>2. 可视化埋点</h3><p><strong>可视化埋点</strong>，即通过直观的界面操作，用户可以通过点击、选择等方式轻松完成埋点操作。这种方式降低了技术门槛，使得没有开发背景的人员也能独立完成埋点工作。</p><p>这种方式虽然提高了便捷性，但也存在埋点碎片化的问题，尤其是在 App 或网页频繁更新时。比如，今天设置的埋点有效，可能几个月后就失效了。此外，不同平台（如 Android、iOS、Web）仍需分别配置，增加了工作量。</p><p>可视化埋点和代码埋点相辅相成，适用于不同的业务场景。例如，在 App 内嵌的 H5 活动页面上，运营人员可以通过可视化埋点轻松满足需求。</p><p><img src="/2024/09/06/data-track/visual.png"></p><h3 id="3-无埋点"><a href="#3-无埋点" class="headerlink" title="3. 无埋点"></a>3. 无埋点</h3><p><strong>无埋点</strong>，也被称为全埋点，是通过集成 SDK 的方式，自动采集用户行为数据，如页面浏览、停留、点击、离开等用户操作信息。这种方式的最大优势是显著降低了开发成本，便于快速采集基础的用户行为数据。</p><p>然而，无埋点的局限性在于只能采集标准的用户交互数据，无法捕捉具体的业务信息。例如，用户购买了哪件商品、商品的价格等细节数据是无法自动获取的。</p><h3 id="4-Tag-Manager"><a href="#4-Tag-Manager" class="headerlink" title="4. Tag Manager"></a>4. Tag Manager</h3><p><strong>Tag Manager</strong>（标签管理器）在国外较为流行，典型代表是 Google Tag Manager。它不仅仅用于埋点，还可用于管理网站或 App 上的各种追踪代码。</p><p>Tag Manager 结合了代码埋点和可视化埋点的优点，尤其适合 Web 场景。由于 JavaScript 的灵活性，Tag Manager 可以根据设定的规则动态下发代码，避免了每次更新代码都需重新发布的问题，埋点也能实时生效。然而，对于移动端，它的应用场景则相对有限。</p><p>未来，国内或许也会诞生类似 Google Tag Manager 的工具。</p><p><img src="/2024/09/06/data-track/tag_manager.png"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>无论采用哪种埋点方式，都需要结合实际的业务场景进行选择。如果是偏业务类的信息，服务端埋点更为合适；而偏向应用交互的信息，则适合在客户端埋点。对于开发资源紧张的团队，可以选择无埋点或可视化埋点；若追求数据的全面性和灵活性，则代码埋点是不二之选。</p><p>归根结底，埋点的核心是围绕业务指标服务，而不是追求面面俱到。<strong>合适的才是最好的</strong>。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
